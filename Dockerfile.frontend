# Node.js 公式イメージを使用
FROM node:24-alpine AS base

# 必要なシステムパッケージをインストール
RUN apk add --no-cache libc6-compat

WORKDIR /app

# 依存関係のインストール用ステージ
FROM base AS deps
COPY frontend/package*.json ./
RUN npm ci

# ビルドステージ
FROM base AS builder

# ビルド時の環境変数
ARG REACT_APP_GOOGLE_CLIENT_ID
ARG REACT_APP_API_URL
ARG REACT_APP_WS_URL

ENV REACT_APP_GOOGLE_CLIENT_ID=$REACT_APP_GOOGLE_CLIENT_ID
ENV REACT_APP_API_URL=$REACT_APP_API_URL
ENV REACT_APP_WS_URL=$REACT_APP_WS_URL

COPY frontend/ ./
COPY --from=deps /app/node_modules ./node_modules

# React アプリケーションのビルド
RUN npm run build

# Nginx を使った本番環境用ステージ
FROM nginx:alpine AS runner

# Nginx設定をコピー
COPY --from=builder /app/build /usr/share/nginx/html

# カスタムNginx設定
RUN cat > /etc/nginx/conf.d/default.conf <<EOF
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # gzip圧縮を有効化
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/css text/javascript text/xml text/plain text/x-component application/javascript application/json application/xml application/rss+xml font/ttf font/opentype application/vnd.ms-fontobject image/svg+xml;

    # キャッシュ設定
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # SPAのルーティング対応
    location / {
        try_files \$uri \$uri/ /index.html;
        
        # セキュリティヘッダー
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()";
    }

    # Service Worker
    location /service-worker.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # API プロキシ設定（オプション）
    location /api {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_cache_bypass \$http_upgrade;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

EXPOSE 80

# ヘルスチェック
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:80 || exit 1

CMD ["nginx", "-g", "daemon off;"]
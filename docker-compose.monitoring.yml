version: '3.8'

# 監視システム用のDocker Compose設定
services:
  # Prometheus - メトリクス収集
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: questboard_prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - questboard_monitoring
    restart: unless-stopped

  # Grafana - ビジュアライゼーション
  grafana:
    image: grafana/grafana:10.2.2
    container_name: questboard_grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://grafana.questboard.example.com
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel
    ports:
      - "3000:3000"
    networks:
      - questboard_monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

  # Node Exporter - ホストメトリクス
  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: questboard_node_exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - questboard_monitoring
    restart: unless-stopped

  # cAdvisor - コンテナメトリクス
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: questboard_cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    ports:
      - "8080:8080"
    networks:
      - questboard_monitoring
    restart: unless-stopped
    privileged: true

  # PostgreSQL Exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    container_name: questboard_postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - questboard_monitoring
      - questboard_default
    restart: unless-stopped

  # Redis Exporter
  redis-exporter:
    image: oliver006/redis_exporter:v1.55.0
    container_name: questboard_redis_exporter
    environment:
      REDIS_ADDR: "redis://redis:6379"
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "9121:9121"
    networks:
      - questboard_monitoring
      - questboard_default
    restart: unless-stopped

  # Elasticsearch Exporter
  elasticsearch-exporter:
    image: prometheuscommunity/elasticsearch-exporter:v1.6.0
    container_name: questboard_es_exporter
    command:
      - '--es.uri=http://elasticsearch:9200'
      - '--es.all'
      - '--es.indices'
      - '--es.cluster_settings'
    ports:
      - "9114:9114"
    networks:
      - questboard_monitoring
      - questboard_default
    restart: unless-stopped

  # AlertManager - アラート管理
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: questboard_alertmanager
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=https://alertmanager.questboard.example.com'
    ports:
      - "9093:9093"
    networks:
      - questboard_monitoring
    restart: unless-stopped

  # Loki - ログ集約
  loki:
    image: grafana/loki:2.9.3
    container_name: questboard_loki
    volumes:
      - ./monitoring/loki:/etc/loki
      - loki_data:/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - questboard_monitoring
    restart: unless-stopped

  # Promtail - ログ収集
  promtail:
    image: grafana/promtail:2.9.3
    container_name: questboard_promtail
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./monitoring/promtail:/etc/promtail
    command: -config.file=/etc/promtail/config.yml
    networks:
      - questboard_monitoring
    restart: unless-stopped
    depends_on:
      - loki

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  loki_data:

networks:
  questboard_monitoring:
    name: questboard_monitoring
  questboard_default:
    external: true
    name: questboard_default
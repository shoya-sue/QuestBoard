apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: questboard
  labels:
    app: backend
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
      version: v1
  template:
    metadata:
      labels:
        app: backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: backend
        image: ghcr.io/your-org/questboard-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: questboard-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: questboard-config
              key: PORT
        - name: FRONTEND_URL
          valueFrom:
            configMapKeyRef:
              name: questboard-config
              key: FRONTEND_URL
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: questboard-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: questboard-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: questboard-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: questboard-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: questboard-secrets
              key: DB_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: questboard-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: questboard-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: questboard-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: questboard-secrets
              key: JWT_SECRET
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: questboard-secrets
              key: SESSION_SECRET
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: questboard-secrets
              key: GOOGLE_CLIENT_ID
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: questboard-secrets
              key: GOOGLE_CLIENT_SECRET
        - name: ELASTICSEARCH_NODE
          valueFrom:
            configMapKeyRef:
              name: questboard-config
              key: ELASTICSEARCH_NODE
        - name: ADMIN_EMAILS
          valueFrom:
            secretKeyRef:
              name: questboard-secrets
              key: ADMIN_EMAILS
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/docs/health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/docs/health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      initContainers:
      - name: wait-for-db
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done']
      - name: wait-for-redis
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z redis-service 6379; do echo waiting for redis; sleep 2; done']
      - name: run-migrations
        image: ghcr.io/your-org/questboard-backend:latest
        command: ['npm', 'run', 'migrate']
        env:
        - name: NODE_ENV
          value: production
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: questboard-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: questboard-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: questboard-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: questboard-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: questboard-secrets
              key: DB_PASSWORD

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: questboard
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
  - name: http
    port: 3001
    targetPort: 3001
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600